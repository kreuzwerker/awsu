name: build

on:
  push:
    branches:
      - master
  pull_request:
    types: ['opened', 'synchronize']
    paths:
      - '**.go'
      - go.mod
      - '.github/workflows/**'

jobs:
  artifact-build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Setup dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -q
          sudo apt-get install -qqy build-essential software-properties-common pkg-config wget libpcsclite-dev
      - name: Build darwin
        if: matrix.os == 'macos-latest'
        run: |
          make build/awsu-darwin-amd64
          mv build/awsu-darwin-amd64 build/awsu-macos-latest-amd64
      - name: Build linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          make build/awsu-linux-amd64
          mv build/awsu-linux-amd64 build/awsu-ubuntu-latest-amd64
      - uses: actions/upload-artifact@v2
        with:
          name: awsu-${{ matrix.os }}-amd64
          path: build/awsu-${{ matrix.os }}-amd64
      
  release-test:
    runs-on: macos-11
    needs: [artifact-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download macos
        uses: actions/download-artifact@v2
        with:
          name: awsu-macos-latest-amd64
      - name: Download linux
        uses: actions/download-artifact@v2
        with:
          name: awsu-ubuntu-latest-amd64
      - name: Correct goreleaser prebuilt path
        run: |
          # as it is the format goreleaser expects. See .goreleaser.yml -> prebuilt -> path
          mv build/awsu-ubuntu-latest-amd64 build/awsu_linux_amd64
          mv build/awsu-macos-latest-amd64 build/awsu_linux_amd64
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --rm-dist --skip-publish --snapshot --skip-sign --debug
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}